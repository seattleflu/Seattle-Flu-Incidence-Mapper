openapi: 3.0.1
info:
  title: Seattle Flu Incidence Mapper API
  description: Seattle Flu Incidence Mapper API service. This includes a model store
    and a model querying API
  contact:
    email: ccollins@idmod.org
  license:
    name: MIT
    url: https://raw.githubusercontent.com/seattleflu/incidence-mapper/master/LICENSE
  version: 1.0.0
externalDocs:
  description: The Seattle Flu Study Model Output API
  url: https://github.com/seattleflu/incidence-mapper
servers:
- url: /v1
tags:
- name: generic_model
  description: Stores our different models
  externalDocs:
    description: Github
    url: https://github.com/seattleflu/incidence-mapper
- name: query_model
  description: Queries our model
  externalDocs:
    description: Github
    url: https://github.com/seattleflu/incidence-mapper
paths:
  /query:
    post:
      tags:
      - query_model
      summary: Query a model
      description: |-
        Query a model for a result set. This API supports output in both CSV and JSON format.
        The incoming query must container a model_type and observed field. Pathogen field is recommended. If not provided then we will use the value <b>['all']</b> as the default

        The format of the output varies based on the model and the requested content-type. Generally speaking, the output will be a collection of rows containing all the observed fields from the query. The result could also include additional fields that are not part of the query but are inherit properties our outputs of the model such a catchment, positive results, n, etc.
      operationId: seattle_flu_incidence_mapper.query_model.query
      requestBody:
        description: Model Query. This will be resolved into a model id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryModel'
        required: true
      responses:
        200:
          description: successful operation. This will contain wll the observed fields
            of the models(included some fields not explicit part of the query depending
            on the model
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties: {}
            text/csv:
              schema:
                type: array
                items:
                  type: object
                  properties: {}
        404:
          description: Could not find a model matching the specified query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Model execution error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /generic_models:
    get:
      tags:
      - generic_model
      summary: List available models
      description: List available pathogen models
      operationId: seattle_flu_incidence_mapper.generic_models.read_all
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathogenModel'
    post:
      tags:
      - generic_model
      summary: Add a new pathogen model to the model store
      description: This is the api we use to upload models. These make models created
        by researchers available through the api. To register a model it should include
        its model_type, name, and query
      operationId: seattle_flu_incidence_mapper.generic_models.create
      security:
      - jwt: ['upload']
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - model
              - model_type
              - name
              - query_str
              properties:
                name:
                  type: array
                  items:
                    type: string
                  description: Name of pathogen model
                query_str:
                  type: array
                  items:
                    type: string
                  description: Query of pathogen model
                model_type:
                  type: array
                  items:
                    type: string
                  description: Type of model
                model:
                  type: array
                  items:
                    type: file
                  description: Model File.
        required: true
      responses:
        405:
          description: Invalid input
          content: {}
  /generic_models/{modelId}:
    get:
      tags:
      - generic_model
      summary: Find pathogen model by ID
      description: Returns a single pathogen model
      operationId: seattle_flu_incidence_mapper.generic_models.read
      parameters:
      - name: modelId
        in: path
        description: ID of Pathogen Model to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathogenModel'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: PathogenModel not found
          content: {}
    put:
      tags:
      - generic_model
      summary: Update an existing model
      operationId: seattle_flu_incidence_mapper.generic_models.update
      parameters:
      - name: jwt
        in: header
        schema:
          type: string
      - name: modelId
        in: path
        description: PathogenModel id to delete
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: PathogenModel object that needs to be updated in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathogenModel'
        required: true
      security:
      - jwt: ['upload']
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: PathogenModel not found
          content: {}
        405:
          description: Validation exception
          content: {}
    delete:
      tags:
      - generic_model
      summary: Deletes a pathogen model
      operationId: seattle_flu_incidence_mapper.generic_models.delete
      parameters:
      - name: modelId
        in: path
        description: PathogenModel id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: PathogenModel not found
          content: {}
      security:
      - jwt: ['upload']
components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: seattle_flu_incidence_mapper.jwt.decode_token
  schemas:
    PathogenModel:
      required:
      - name
      - query_str
      type: object
      properties:
        id:
          type: string
          example: abcdef01234567890
        name:
          type: string
          example: flu1_latent_x
        query_str:
          type: string
        model_type:
          type: string
        created:
          type: string
          format: date-time
    QueryModel:
      required:
      - model_type
      - observed
      type: object
      properties:
        model_type:
          type: string
          description: The model type. Currently we support inla and inla_latent models
          example: inla_observed
          enum:
          - inla_observed
          - inla_latent
        observed:
          type: array
          description: List of observed fields
          example:
          - residence_census_tract
          - site_type
          - flu_shot
          - sex
          - encountered_week
          items:
            type: string
        pathogen:
          type: array
          items:
            type: string
        spatial_domain:
          type: string
          example: seattle_geojson_census_tract
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    ErrorResponse:
      required:
      - error
      type: object
      properties:
        error:
          type: string
          example: Could not find the specified id
